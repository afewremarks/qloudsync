<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="folderBrowserDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Mf8AajT/DGw3/wtnNP8HYjH/CFgt/wc+ILkABwAkAAAAAAAAAAMAAAAAAAAAAgAAAAAYOiXBCFMq/wA+
        EPsfZz7+NZ9s/ze9fv8xwn/+Nrt6/gCVWP6Sv6P+/ffy/tfe0f6EsZH+NqNu/lS8jP5uw5n+YbKI/kqa
        cP41hVj+I3NE/RRmN/wAXSj7AGAs+gxhMfoFXC39B2Ew/wZUKfgAEAswAAAAAAAAAAEAAAAAAAAADBRG
        KOcORiL/SaV6/VHsqP5N9qr/VOah/mDcof5W2pr/W5V4/uTf2v708uv++PLt//nz7/7R3M//g7SW/2K0
        kP59z6r+i964/oDasf5vzaH+W76Q/kuleP4ebz7+AFwg/gBkMP4LYTL4B2Yy/wZPJ9kAAAABAAAAAgAA
        AAALFgsvFUQk/1S0if5V/bX+QNCQ/kyIb/6Ij4//k5CU/2FcY/+0sLD//fnz//Pw6f/y7+r+8/Dp//n0
        7/727ur+xcC9/3B1cf4wUkf/SXFi/lqKd/5Oj3P+Rad8/kSkdf4zeE/+Fl4v/gBWHP8AYi75C2w2/wAa
        Ck4AAAAEAAAAAAMRBlxJkm7/V/mx+jK8f/4lISb+Xl9l/pSZmf+Eior+eX58/+3r5v739O/+9PLs/vXy
        7f/08uz+8/Hr//Pw6v77+fH++PTt/8jJw/55g3/+VmNj/nN5ff5ydnr+XLWM/lPwqf5V3Z7/RaZ2/g9d
        LPoAajL/BysZcQAAAAQAAAAAFCAUj1fVm/9E5J76CyoW/jA4N/9ufHv+mqCf/3N6e//Bwb3//vv3//Ty
        7f/29PD/9vTw//b08P/08+7+9fLt//Pw6//y7+r++vfx//Lv5/7Aw7z+f4+I/nqIiP6WpqP+jsKq/kvT
        k/5N+az+UMqT+hhwPP8AJRNuAAAAAgAAAAAhQy++V/Cs/zOxevsAAAD+O09K/n2Ih/6UnJz/jpOS//Ty
        7v/59vL/+PXx//j18f/49fH/+PXx//b18P/29PD/9fTu//Xy7f/z8Ov/9PDr//r28f/s6uT/tbqz/n2M
        h/6FjJD+MSUp/iidZf5M+av6Rs+Q/wAeBW8AAAAAAAAACzJsTeZW97D/I4hc/QwAAP5GWFX+jZmZ/4mV
        lv/P0M7///76//b08P/59fH/+fXx//n28//59vP/9/by//j18f/29fD/9vTu//Xy7f/z8Ov+8e7p/vPv
        6P759O3+6eff/qStpP4ADAD+AAAA/j2+gfpV/7n/FUMubwAAAAAAAAAtQZhu/07xqv4UXjr+GBgV/lpp
        Z/+QnZ7+qLCv//n39f/59/X/+fv7//r+///6/P7/+ff1//n28v/59/X/9/bz//j18v/29fH/9vTu//Xy
        7f/08ez/8/Dp/+/r5f7z7+j/+PPr/sjIv/4oJx//AmU7+lz/vP8cX0VuAAAAAAYUBltNv4v/R+Oe+wAx
        Ff4lMiz/and4/pakpP/c4N3///z7//n7+//54c7/98aY//jav//6+vf/+v7///r39f/59/X/+ffz//f2
        8v/29fH/9vTu//Xy7f/08ev/8/Dp//Ht5v7u6+P/+PTs/trVzv5Malb6SPus/yJmRnAAAAAAFCcXjlTd
        n/89zY36AAAA/jBCPP50goL+tr+9//v69//7/v//+eLO//WRAP/1jwD/9Y8A//asYP/54Mz/+/7+//r6
        +f/59/X/+ffz//j18v/29fD/9fLu//Tx7P/z7+r+8e/o//Ht5v7s6uL/9O7m/tvc0vts9bH/D0cuUwAA
        AAAfRS+/Vu6p/zOtdfsAAAD+QFFN/n+Pjf7l5+b///77//v////4zKL/9I8A//WeL//1mh//9ZQA//WS
        AP/2tXb/+vXu//r69//59/X/+PXx//j18P/29PD/9fLt//Tx6//z7+n/8e3n/+/r4/7p6N3++evn/7Hl
        wf4AHA4lAAAADCtlRudT8qr/I4ZZ/RUAAP4+U1D/qLSx/v/////6+vn//P7+//zu4P/2pjn/9ZkA//Wc
        G//1mQr/9IsA//awZ//7+vn/+vr3//n28v/5+/v/9/f1//by7f/18u7/9PHs//Pw6f/x7+f/7uvj/vDo
        4f3g8N3/RMCC4AAAAAYAAAAvNolg/0zooP0UXDf+ICIf/0xfW/7n6uj///////v6+f/+/v7/++/i//ah
        KP/2nxn/9ZYA//jGk//4yZ3/+urc//z////6+fX/9rBn//fFl//48ur/9/n2//Xy7f/08ez/8/Dp//Pv
        6P/u6+P+8+fi+5DtuP8AlVy3AAAAAAAAAF47qHT/QtaT+hg7Iv8ADQD+oqel/v39/f77+vr//vv4//7/
        ///85M3/958A//akLP/3mAD/+MOL//z////7+/n//P////jKn//0igD/9ZQA//WfNf/328L/9vf1//Xx
        6v/08Ov/8O3n//fy6v7Fxr/6ONuQ/yBsRoYAAAAABxMAlT+9gf85vn/6AAAA/jdIQP7r7er+///+//z7
        +v/8+/r//Pz8//359f/5xXv/+Kwj//ahAP/2q0D/+/bx//z7+v/7////+urb//eyZP/1nAz/9ZkA//WW
        AP/15NP/9fXy//Tw6f/z8On/7+ni/mWFcPs33JD/D0AoUwAAAAAPKRavP8mH/zagbPsAAAD+pqyn/v39
        /f75+ff//Pv6//z7+v/8+/r//Pv7//v69f/5xoH/96MA//ajAP/66tf/+/////rv4f/54MX/97lv//ec
        AP/2oir/95cA//bFkf/19/X/8ezl//358v+uq6X+BXdJ/0HTjP4HFBQnAAAAABU8J6tB0Yr/DHVF+zgz
        M/7r7un++fn1//r59v/7+vn/+/v5//v7+f/7+fb/+/////nfu//4qgD/9qgO//e6Y//3v3D/9qYK//Wa
        AP/3nwD/9qMY//afEP/4pxf/9sOK//T18v/18en/6ejg/jU+L/05oW7/MLJz4AAAAAcAAAAAHVM2qUPT
        jP8APQL7q6qm/vn69P708+/++ff1/vr69//6+vf/+vr3//r59//6+vn/+vbx//nAYv/5tB//+K8T//ip
        AP/4sin/+LMs//irJP/2qiX/+LQ9//iwHf/12r7/8fLw//338f+boZb+AAAA+0zAhf8ci1a3AAAAAAAA
        AAMpbkupLcZ+/0RYSPrr6+b++ffx/vX08P/39vP/+vn2//r59v/6+fb/+vn2//r39f/6+vr/+fDm//jM
        g//5wVL/+cFL//nJcv/40Yz/+cBS//m+Rv/5vU//9tOp//T08P/49e7/397W/gAxDP4gRyv6QsyI/w1f
        O4YAAAAAAAAABC2BWKs4zIX/CS0T+3qBe//e3tr++vby//j18f729fL/9/bz//n39f/59/X/+ff1//n3
        8//5+vf/+fn5//ju4f/46tj/+PLt//f39//27N//9+XR//Xs4//19vX/8+/p//v58v+FioH/AAAA/zVo
        SPs4zIP/AzoeVAAAAAAAAAAEJnRSmTzekv8JTCv6AAAA/pqsqv7M1tT/6+3p/v38+P79+vf/9vXy//b1
        8v/59vP/+fbz//j28f/49vH/9/n2//f59//39vP/+PXw//b29f/29/X/9fXx//Pv6f/79/H/0M/J/wAV
        AP4AKQD+OIJZ/ym6cv4AGQ0oAAAAAAAAAAIVNCJKPeWV/yifZ/kIAAD+VWNd/ml9ef6AkY7+sbq1/uPj
        3/79/Pj+/fr2/vTz7/729PD/9/Tw/vf08P749PD/9vTw//b18P/29PD/9vTu//Xy7P/18ez/8/Dr//j1
        7v9qbWX/AB8A/hAuD/08mWf/Gptb4AAAAAcAAAAAAAAAAQAAAAAih1etN+eT/ymMXfgAAAD7AAAA/QAA
        AP4AAAD+BzUV/4OOgf/b3df///74//z59f718u7/9PPu/vbz7/728+/+9vPu/vbz7v718u3/9fLt//Hv
        6f/8+PL+v763/gAAAP4VQh/+ETcZ+z+uc/8Kd0K4AAAAAAAAAAMAAAAAAAAAAAAAAAMfg1KvMtmI/z2/
        ff88iGH/NGNK/yxTO/wbPCP6AAcA+gAkAPuDiX/82dfT/fz38/749PD+8/Hs//Ty7f/18u3/9fLt//Pw
        6/7z8Or+8/Dq/vDt6P9KYU3+ADcA/gAlAP88cFP4NLtz/wBKJn8AAAAAAAAABAAAAAAAAAACAAAAAAAA
        AAAJNyJTG4ZTtiiqa+Izt3X4O798/0HAfv9HuX3/Qahy/w+IUP8sflH/kq6a/t/l3Pv59PH69/Ds+vDt
        5/vy7+n99fHs//Hu5/79+fL/pqyh/gAAAP8MMQr+OWhN+UOtdf8DlU/4ABMAGwAAAAAAAAACAAAAAAAA
        AAAAAAABAAAAAgAAAAAAAAAAAAAABwAIAB8AKhU9CEIlYQteOYcYeUqtKZJbzyqiZesApFz/NLVz/5nV
        rf/r9uf////+//v38f/q6eL68e7o/OXh2/s4YEX6LGND+keOZ/w/sHT/BZxT/wMqGk8AAAAAAAAABAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwAZ
        EykAKhVJADoObg5ZM5V8kYC31tXO5f//+v////j/ncup/wykX/8+sHL/HJ5a/wBuN8cFGBM2AAAAAAAA
        AAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAACAAAAAwAAAAQAAAAEAAAAAwAA
        AAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGfHx4hq6uqL0AKRNRADwebwAwFV8AFgsvAAAAAAAA
        AAAAAAAEAAAAAAAAAAAAAAAAAAAAAP4H///4AB//8AAAP/AAAAfgAAAD4AAAAeAAAAHgAAABwAAAAcAA
        AAHAAAABwAAAAcAAAAGAAAABgAAAAYAAAAGAAAABgAAAAQAAAAMAAAADAAAAAwAAAAMAAAADAAAABwAA
        AAeAAAAHgAAAB8AAAA/wAAAP/4AAH///AD///+f/
</value>
  </data>
</root>